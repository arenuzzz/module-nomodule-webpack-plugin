{"version":3,"file":"worker.js","sources":["../src/lib/util.js","../src/worker.js"],"sourcesContent":["/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Convert a Babel-style SourceMap to Terser-style, parsing if necessary.\n * @param {(import('@babel/core').BabelFileResult)['map']|string|null} map\n * @return {import('source-map').RawSourceMap|null} map\n * @todo This should be deleted, as it's exclusively to make TypeScript happy.\n */\nexport function toTerserMap (map) {\n  if (typeof map === 'string') map = JSON.parse(map);\n  return typeof map === 'object' && map ? {\n    ...map,\n    version: String(map.version)\n  } : null;\n}\n\n/**\n * Convert a Terser-style SourceMap to Babel-style, parsing if necessary.\n * @param {import('source-map').RawSourceMap|string|null} map\n * @returns {(import('@babel/core').BabelFileResult)['map']|null}\n * @todo This should be deleted, as it's exclusively to make TypeScript happy.\n */\nexport function toBabelMap (map) {\n  if (typeof map === 'string') map = JSON.parse(map);\n  return typeof map === 'object' && map ? {\n    file: '',\n    ...map,\n    version: parseInt(map.version, 10)\n  } : null;\n}\n\nconst DEFAULT_COREJS_VERSION = 2;\n\nlet corejsVersion;\n\n/**\n * Get the user's installed version of core-js\n * @returns {number}\n */\nexport function getCorejsVersion () {\n  if (!corejsVersion) {\n    try {\n      // @ts-ignore\n      corejsVersion = parseInt(require('core-js/package.json').version, 10);\n      console.log(`[OptimizePlugin] Detected core-js version ${corejsVersion}`);\n    } catch (e) {\n      console.warn(\n        `[OptimizePlugin] Unable to detect installed version of core-js. Assuming core-js@${DEFAULT_COREJS_VERSION}.`\n      );\n      corejsVersion = DEFAULT_COREJS_VERSION;\n    }\n  }\n  return corejsVersion;\n}\n\nexport function createPerformanceTimings () {\n  const timings = [];\n\n  const start = name => {\n    timings.push({ name, start: Date.now() });\n  };\n\n  const end = name => {\n    for (const entry of timings) {\n      if (entry.name === name) {\n        entry.end = Date.now();\n        entry.duration = entry.end - entry.start;\n        return;\n      }\n    }\n  };\n\n  return {\n    timings,\n    start,\n    end\n  };\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// import * as terser from 'terser';\nimport babel from '@babel/core';\n// import transformWebpackUrls from './lib/transform-change-webpack-urls';\n// import extractPolyfills from './lib/transform-extract-polyfills';\n// import { toBabelMap, toTerserMap, createPerformanceTimings } from './lib/util';\nimport { createPerformanceTimings } from './lib/util';\n// import createBabelPresetReactApp from 'babel-preset-react-app';\n\n// import swc from '@swc/core';\nconst NAME = 'OptimizePlugin';\n\n// const TERSER_CACHE = {};\n\nconst noopTimings = { timings: [], start: (n) => {}, end: (n) => {} };\n\n/**\n * @param {object} $0\n * @param {string} $0.file\n * @param {string} $0.source\n * @param {string|object} $0.map\n * @param {object} [$0.options]\n * @param {boolean} [$0.options.timings = false]\n * @param {boolean} [$0.options.minify = false]\n * @param {boolean} [$0.options.downlevel = false]\n * @param {boolean} [$0.options.modernize = false]\n * @param {number} [$0.options.corejsVersion]\n */\nexport async function process({ file, source, map, options = {} }) {\n  const { timings, start, end } = options.timings\n    ? createPerformanceTimings()\n    : noopTimings;\n  const {\n    minify,\n    downlevel\n    // modernize\n  } = options;\n\n  // const polyfills = new Set();\n  let legacy;\n  // let modern;\n\n  const outputOptions = {\n    compact: minify,\n    minified: minify,\n    // envName: minify ? 'production' : 'development',\n    comments: minify ? false : undefined,\n    generatorOpts: {\n      concise: true\n    }\n  };\n\n  // start('modern');\n\n  // modern = await babel.transformAsync(source, {\n  //   configFile: false,\n  //   babelrc: false,\n  //   filename: file,\n  //   inputSourceMap: map,\n  //   sourceMaps: true,\n  //   sourceFileName: file,\n  //   sourceType: 'module',\n  //   envName: 'modern',\n  //   ast: true,\n  //   presets: [\n  //     // '@babel/preset-modules',\n  //     // modernize && [\n  //     //   'babel-preset-modernize',\n  //     //   {\n  //     //     loose: true,\n  //     //     webpack: true,\n  //     //   },\n  //     // ],\n  //   ].filter(Boolean),\n  //   plugins: [],\n  //   ...outputOptions,\n  //   caller: {\n  //     supportsStaticESM: true,\n  //     name: NAME + '-modern',\n  //   },\n  // });\n  // end('modern');\n\n  // if (minify) {\n  //   start('modern-minify');\n  //   const minified = await terser.minify(modern.code, {\n  //     // Enables shorthand properties in objects and object patterns:\n  //     ecma: 2017,\n  //     module: false,\n  //     nameCache: TERSER_CACHE,\n  //     // sourceMap: true,\n  //     sourceMap: {\n  //       content: toTerserMap(modern.map),\n  //     },\n  //     compress: {\n  //       global_defs: {\n  //         MODERN_MODE: true,\n  //         'process.env.NODE_ENV': global.process.env.NODE_ENV || 'production',\n  //       },\n  //     },\n  //     // Fix Safari 10 issues\n  //     // ({a}) --> ({a:a})\n  //     // !await a --> !(await a)\n  //     safari10: true,\n  //     mangle: {\n  //       toplevel: true,\n  //       // safari10: true\n  //       // properties: {\n  //       //   regex: /./\n  //       // }\n  //     },\n  //   });\n\n  //   modern.code = minified.code;\n  //   modern.map = toBabelMap(minified.map);\n\n  //   // @todo this means modern.ast is now out-of-sync with modern.code\n  //   // can this work? or do we need to run Terser separately for modern/legacy?\n  //   end('modern-minify');\n  // }\n\n  if (downlevel) {\n    start('legacy');\n\n    // simple and dangerous transformWebpackUrls\n    const replacedSource = source.replace(\n      /\".chunk.js\";/gm,\n      '\".chunk.legacy.js\";'\n    );\n\n    legacy = await babel.transformAsync(replacedSource, {\n      configFile: false,\n      babelrc: false,\n      filename: file,\n      inputSourceMap: map,\n      sourceMaps: true,\n      sourceFileName: file,\n      sourceType: 'module',\n      envName: 'production',\n      presets: [\n        [\n          '@babel/preset-env',\n          {\n            targets: ['>0.2%', 'not dead', 'not op_mini all'],\n            corejs: options.corejsVersion,\n            useBuiltIns: 'entry'\n          }\n        ]\n      ],\n      ...outputOptions,\n      caller: {\n        supportsStaticESM: false,\n        name: NAME + '-legacy'\n      }\n    });\n    end('legacy');\n  }\n\n  return {\n    modern: { source, map },\n    // modern: sanitizeResult(modern),\n    // legacy: legacy && { source, map },\n    legacy: legacy && sanitizeResult(legacy),\n    // polyfills: [],\n    // polyfills: Array.from(polyfills),\n    timings\n  };\n}\n\nfunction sanitizeResult(result) {\n  return { source: result.code, map: result.map };\n}\n"],"names":["createPerformanceTimings","timings","start","name","push","Date","now","end","entry","duration","NAME","noopTimings","n","process","file","source","map","options","minify","downlevel","legacy","outputOptions","compact","minified","comments","undefined","generatorOpts","concise","replacedSource","replace","babel","transformAsync","configFile","babelrc","filename","inputSourceMap","sourceMaps","sourceFileName","sourceType","envName","presets","targets","corejs","corejsVersion","useBuiltIns","caller","supportsStaticESM","modern","sanitizeResult","result","code"],"mappings":"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"}